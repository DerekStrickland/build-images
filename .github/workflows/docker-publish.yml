name: Docker

on:
  push:
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/ingraind-build
  MAIN_BRANCH: main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      ubuntu2004: ${{ steps.ubuntu2004.outputs.image_id }}
      ubuntu1804: ${{ steps.ubuntu1804.outputs.image_id }}
      rawhide: ${{ steps.rawhide.outputs.image_id }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up version information
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "$MAIN_BRANCH" ] && VERSION=latest

          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Build Ubuntu 20.04
        id: ubuntu2004
        run: |
          VERSION=${{ env.version }}-ubuntu-20.04

          docker build --no-cache \
                       -f Dockerfile.20.04 \
                       -t $IMAGE_NAME:$VERSION \
                       .

          echo "::set-output name=image_id::$VERSION"

      - name: Build Ubuntu 18.04
        id: ubuntu1804
        run: |
          VERSION=${{ env.version }}-ubuntu-18.04

          docker build --no-cache \
                       -f Dockerfile.18.04 \
                       -t $IMAGE_NAME:$VERSION \
                       .

          echo "::set-output name=image_id::$VERSION"

      - name: Build Fedora Rawhide
        id: rawhide
        run: |
          VERSION=${{ env.version }}-fedora-rawhide

          docker build --no-cache \
                       -f Dockerfile.fedora \
                       -t $IMAGE_NAME:$VERSION \
                       .

          echo "::set-output name=image_id::$VERSION"

            
  push:
    needs: build

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          docker push ${{ needs.build.outputs.ubuntu2004.image_id }}
          docker push ${{ needs.build.outputs.ubuntu1804.image_id }}
          docker push ${{ needs.build.outputs.rawhide.image_id }}
