name: Docker

on:
  push:
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/ingraind-build
  MAIN_BRANCH: main

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up version information
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "${{ env.MAIN_BRANCH }}" ] && VERSION=latest

          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Build Ubuntu 20.04
        run: |
          VERSION=${{ env.version }}-ubuntu-20.04

          docker build --no-cache \
                       -f Dockerfile.20.04 \
                       -t $IMAGE_NAME:$VERSION \
                       .

          docker push $IMAGE_NAME:$VERSION

      - name: Build Ubuntu 18.04
        run: |
          VERSION=${{ env.version }}-ubuntu-18.04

          docker build --no-cache \
                       -f Dockerfile.18.04 \
                       -t $IMAGE_NAME:$VERSION \
                       .

          docker push $IMAGE_NAME:$VERSION

      - name: Build Fedora Rawhide
        run: |
          VERSION=${{ env.version }}-fedora-rawhide

          docker build --no-cache \
                       -f Dockerfile.rawhide \
                       -t $IMAGE_NAME:$VERSION \
                       .

          docker push $IMAGE_NAME:$VERSION
            
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: build

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          docker push $IMAGE_ID:$VERSION
